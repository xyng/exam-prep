{"version":3,"sources":["Topic.js","topics.js","ShowTopic.js","ShowAllTopics.js","RandomTopicGenerator.js","ShowRandomTopic.js","App.js","registerServiceWorker.js","index.js","md/ameisen.md","md/bellman-ford.md","md/binary-knapsack-dynamic.md","md/branch-bound.md","md/consistent-graph-solution.md","md/constraint-programming.md","md/dynamic-programming.md","md/floyd.md","md/genetic.md","md/heuristic-opening.md","md/neighbourhoods.md","md/tsp-branch.md","md/tsp-dynamic.md","md/verbesserungsverfahren.md","md/probleme.md"],"names":["Topic","title","mdFile","Object","classCallCheck","this","_this","fetch","then","res","text","md","description","topic","topics","require","ShowTopic","props","react_default","a","createElement","className","react_markdown_default","source","PureComponent","ShowAllTopics","possibleConstructorReturn","getPrototypeOf","call","state","loading","_this2","Promise","all","map","getTopic","setState","index","key","concat","ShowTopic_ShowTopic","Component","RandomTopicGenerator","usedTopics","length","Error","number","Math","floor","random","filter","elem","equals","push","ShowRandomTopic","selectTopic","randomTopic","getRandomTopic","hasTopics","hasUnusedTopics","disabled","onClick","App","BrowserRouter","NavLink","to","exact","activeClassName","Route","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.9fad3f3e.chunk.js","sourcesContent":["export default class Topic {\n\tconstructor(title, mdFile) {\n\t\tthis.title = title\n\t\tthis.mdFile = mdFile\n\t}\n\n\tgetTopic() {\n\t\treturn fetch(this.mdFile)\n\t\t\t.then(res => res.text())\n\t\t\t.then(md => ({\n\t\t\t\ttitle: this.title,\n\t\t\t\tdescription: md,\n\t\t\t}))\n\t}\n\n\tequals(topic) {\n\t\treturn this.title === topic.title\n\t}\n}","import Topic from \"./Topic\"\n\nconst topics = [\n    new Topic(\n        \"Ameisenalgorithmus\",\n        require('./md/ameisen.md'),\n    ),\n    new Topic(\n        \"Bellman Ford\",\n        require('./md/bellman-ford.md'),\n    ),\n    new Topic(\n        \"Binäres Rucksackproblem Dynamisch\",\n        require('./md/binary-knapsack-dynamic.md'),\n    ),\n    new Topic(\n        \"Branch & Bound\",\n        require('./md/branch-bound.md'),\n    ),\n    new Topic(\n        \"Gegeben einen Knoten- und Katenkonsistener Graph mit jeweils 3 Elementen in den Domänen. Gibt es eine Lösung?\",\n        require('./md/consistent-graph-solution.md'),\n    ),\n    new Topic(\n        \"Constraint Programming\",\n        require('./md/constraint-programming.md'),\n    ),\n    new Topic(\n        \"Dynamische Programmierung\",\n        require('./md/dynamic-programming.md'),\n    ),\n    new Topic(\n        \"Floyd\",\n        require('./md/floyd.md'),\n    ),\n    new Topic(\n        \"genetic\",\n        require('./md/genetic.md'),\n    ),\n    new Topic(\n        \"Eröffnungsverfahren\",\n        require('./md/heuristic-opening.md'),\n    ),\n    new Topic(\n        \"Nachbarschaften\",\n        require('./md/neighbourhoods.md'),\n    ),\n    new Topic(\n        \"TSP Branch & Bound\",\n        require('./md/tsp-branch.md'),\n    ),\n    new Topic(\n        \"TSP Dynamische Programmierung\",\n        require('./md/tsp-dynamic.md'),\n    ),\n    new Topic(\n        \"Verbesserungsverfahren\",\n        require('./md/verbesserungsverfahren.md'),\n    ),\n    new Topic(\n        \"Probleme\",\n        require('./md/probleme.md'),\n    ),\n]\n\nexport default topics\n\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport ReactMarkdown from 'react-markdown'\n\nexport default class ShowTopic extends PureComponent {\n    static propTypes = {\n        topic: PropTypes.shape({\n            title: PropTypes.string,\n            description: PropTypes.string,\n        }),\n    }\n\n    render() {\n        const { topic } = this.props\n        return (\n            <div>\n                <h2>{topic.title}</h2>\n                <details>\n                    <summary className=\"btn btn-secondary mb-2\">Zusammenfassung</summary>\n                    <div className=\"card mb-2 text-left\">\n                        <ReactMarkdown className=\"card-body markdown-body\" source={topic.description} />\n                    </div>\n                </details>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport topics from './topics';\nimport ShowTopic from './ShowTopic';\n\nclass ShowAllTopics extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            loading: true,\n            topics: [],\n        }\n    }\n\n    componentDidMount() {\n        Promise.all(topics.map(\n            topic => topic.getTopic()\n        )).then(topics => {\n            this.setState({\n                loading: false,\n                topics\n            })\n        })\n    }\n\n    render() {\n        const { topics } = this.state\n\n        return (\n            <div className=\"container text-center py-4\">\n                {this.state.loading && <p>Loading</p>}\n\n                {!this.state.loading && (\n                    <div className=\"row\">\n                        {topics.map(\n                            (topic, index) => (\n                                <div className=\"col-6\" key={`topic-${index}`}>\n                                    <div className=\"card mb-4\">\n                                        <div className=\"card-body\">\n                                            <ShowTopic topic={topic} />\n                                        </div>\n                                    </div>\n                                </div>\n                            )\n                        )}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default ShowAllTopics;\n","import topics from \"./topics\"\n\nexport default class RandomTopicGenerator {\n\tconstructor() {\n\t\tthis.topics = topics\n\n\t\tthis.usedTopics = []\n\t}\n\n\thasUnusedTopics() {\n\t\treturn !!this.topics.length\n\t}\n\n\tgetRandomTopic() {\n\t\tif (this.topics.length === 0) {\n\t\t\tthrow new Error(\"no unused topics left\")\n\t\t}\n\n\t\tconst number = Math.floor((Math.random() * this.topics.length))\n\t\tconst topic = this.topics[number]\n\n\t\tthis.topics = this.topics.filter(\n\t\t\telem => !elem.equals(topic)\n\t\t)\n\n\t\tthis.usedTopics.push(topic)\n\n\t\treturn topic\n\t}\n}","import React, { Component } from 'react';\nimport RandomTopicGenerator from './RandomTopicGenerator';\nimport ShowTopic from './ShowTopic';\n\nclass ShowRandomTopic extends Component {\n    constructor(props) {\n        super(props)\n\n        this.randomTopic = new RandomTopicGenerator()\n\n        this.state = {\n            loading: true\n        }\n    }\n\n    componentDidMount() {\n        this.selectTopic()\n    }\n\n    selectTopic = () => {\n        const topic = this.randomTopic.getRandomTopic()\n        this.setState({\n            loading: true,\n            topic: {},\n            hasTopics: this.randomTopic.hasUnusedTopics()\n        })\n\n        topic.getTopic().then(topic => {\n            this.setState({\n                loading: false,\n                topic\n            })\n        })\n    }\n\n    render() {\n        const { topic } = this.state\n\n        return (\n            <div className=\"container text-center py-4\">\n                {this.state.loading && <p>Loading</p>}\n                {!this.state.loading && (\n                    <ShowTopic topic={topic} />\n                )}\n                {!this.state.hasTopics && (\n                    <p>All Topics done!</p>\n                )}\n                {this.state.hasTopics && (\n                    <button className=\"btn btn-secondary\" disabled={!this.state.hasTopics} onClick={this.selectTopic}>Get Next Topic</button>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default ShowRandomTopic;\n","import React, { PureComponent } from 'react';\nimport ShowAllTopics from './ShowAllTopics';\nimport ShowRandomTopic from './ShowRandomTopic';\n\nimport { BrowserRouter as Router, Route, NavLink } from 'react-router-dom';\n\nimport 'katex/dist/katex.min.css';\n\nclass App extends PureComponent {\n\trender() {\n\t\treturn (\n\t\t\t<Router>\n\t\t\t\t<div className=\"container text-center py-4\">\n\t\t\t\t\t<div className=\"btn-group btn-group-lg\">\n\t\t\t\t\t\t<NavLink\n\t\t\t\t\t\t\tto=\"/\"\n\t\t\t\t\t\t\texact={true}\n\t\t\t\t\t\t\tclassName=\"btn btn-secondary\"\n\t\t\t\t\t\t\tactiveClassName=\"active\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tAll Topics\n\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t\t<NavLink\n\t\t\t\t\t\t\tto=\"/random\"\n\t\t\t\t\t\t\tclassName=\"btn btn-secondary\"\n\t\t\t\t\t\t\tactiveClassName=\"active\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tRandom Topic\n\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<Route exact path=\"/\" component={ShowAllTopics} />\n\t\t\t\t\t<Route path=\"/random\" component={ShowRandomTopic} />\n\t\t\t\t</div>\n\t\t\t</Router>\n\t\t);\n\t}\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'github-markdown-css';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n","module.exports = __webpack_public_path__ + \"static/media/ameisen.b3efaa37.md\";","module.exports = __webpack_public_path__ + \"static/media/bellman-ford.f180146a.md\";","module.exports = __webpack_public_path__ + \"static/media/binary-knapsack-dynamic.d4937a77.md\";","module.exports = __webpack_public_path__ + \"static/media/branch-bound.f388eba1.md\";","module.exports = __webpack_public_path__ + \"static/media/consistent-graph-solution.d41d8cd9.md\";","module.exports = __webpack_public_path__ + \"static/media/constraint-programming.5abb1498.md\";","module.exports = __webpack_public_path__ + \"static/media/dynamic-programming.2525c14e.md\";","module.exports = __webpack_public_path__ + \"static/media/floyd.85b794db.md\";","module.exports = __webpack_public_path__ + \"static/media/genetic.ba079e35.md\";","module.exports = __webpack_public_path__ + \"static/media/heuristic-opening.c0e637fe.md\";","module.exports = __webpack_public_path__ + \"static/media/neighbourhoods.b67b4663.md\";","module.exports = __webpack_public_path__ + \"static/media/tsp-branch.150f8bc6.md\";","module.exports = __webpack_public_path__ + \"static/media/tsp-dynamic.d41d8cd9.md\";","module.exports = __webpack_public_path__ + \"static/media/verbesserungsverfahren.dfaa978a.md\";","module.exports = __webpack_public_path__ + \"static/media/probleme.cc8f170d.md\";"],"sourceRoot":""}